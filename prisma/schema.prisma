generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://read_only:Password1@sql.xn--skruenglen-5cb.dk:3306/skruenoeglen"
}

model car {
  id                 Int      @id @default(autoincrement())
  user_id            BigInt
  brand              String   @db.VarChar(128)
  motor              String   @db.VarChar(128)
  first_registration DateTime @db.Date
  model              String   @db.VarChar(128)
  type               String   @db.VarChar(128)
  license_plate      String   @db.VarChar(128)
  vin                String   @db.VarChar(128)
  image              String?  @db.Text
  created_at         DateTime @default(now()) @db.Timestamp(0)
  updated_at         DateTime @default(now()) @db.Timestamp(0)
  users              users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "car_ibfk_1")

  @@index([user_id], map: "user_id")
}

model category {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(128)
  post post[]
}

model comment {
  id          BigInt   @id @default(autoincrement())
  description String   @db.Text
  solution    Int      @db.TinyInt
  user_id     BigInt
  post_id     BigInt
  parent_id   Int?
  created_at  DateTime @default(now()) @db.Timestamp(0)
  updated_at  DateTime @default(now()) @db.Timestamp(0)
  users       users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comment_ibfk_1")
  post        post     @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comment_ibfk_2")

  @@index([post_id], map: "post_id")
  @@index([user_id], map: "user_id")
}

model post {
  id                     BigInt       @id @default(autoincrement())
  user_id                BigInt
  title                  String       @db.VarChar(128)
  description            String       @db.Text
  car_brand              String?      @db.VarChar(128)
  car_motor              String?      @db.VarChar(128)
  car_first_registration DateTime?    @db.Date
  car_model              String?      @db.VarChar(128)
  car_type               String?      @db.VarChar(128)
  category_id            Int?         @default(10)
  created_at             DateTime     @default(now()) @db.Timestamp(0)
  updated_at             DateTime     @default(now()) @db.Timestamp(0)
  comment                comment[]
  users                  users        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "post_ibfk_1")
  category               category?    @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_ibfk_2")
  post_image             post_image[]

  @@index([category_id], map: "category_id")
  @@index([user_id], map: "user_id")
}

model post_image {
  id      BigInt  @id @default(autoincrement())
  image   String? @db.VarChar(128)
  post_id BigInt
  post    post    @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "post_image_ibfk_1")

  @@index([post_id], map: "post_id")
}

model user_role {
  id    Int     @id @default(autoincrement())
  name  String  @db.VarChar(128)
  users users[]
}

model users {
  id            BigInt    @id @default(autoincrement())
  name          String    @db.VarChar(128)
  email         String    @unique(map: "email") @db.VarChar(128)
  password      String    @db.LongText
  description   String?   @db.Text
  profile_image String?   @db.Text
  role_id       Int
  created_at    DateTime  @default(now()) @db.Timestamp(0)
  updated_at    DateTime  @default(now()) @db.Timestamp(0)
  car           car[]
  comment       comment[]
  post          post[]
  user_role     user_role @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_ibfk_1")

  @@index([role_id], map: "role_id")
}
